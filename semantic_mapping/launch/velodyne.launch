<launch>   

  <!-- declare arguments with default values -->
  <arg name="calibration" default="$(find velodyne_pointcloud)/params/VLP16db.yaml"/>
  <arg name="device_ip" default="" />
  <arg name="frame_id" default="velodyne" />
  <arg name="manager" default="$(arg frame_id)_nodelet_manager" />
  <arg name="max_range" default="130.0" />
  <arg name="min_range" default="0.4" />
  <arg name="pcap" default="" />
  <arg name="port" default="2368" />
  <arg name="read_fast" default="false" />
  <arg name="read_once" default="false" />
  <arg name="repeat_delay" default="0.0" />
  <arg name="rpm" default="600.0" />
  <arg name="gps_time" default="false" />
  <arg name="cut_angle" default="-0.01" />
  <arg name="timestamp_first_packet" default="false" />
  <arg name="laserscan_ring" default="-1" />
  <arg name="laserscan_resolution" default="0.007" />
  <arg name="organize_cloud" default="false" />

  <!-- start nodelet manager and driver nodelets -->
  <include file="$(find velodyne_driver)/launch/nodelet_manager.launch">
    <arg name="device_ip" value="$(arg device_ip)"/>
    <arg name="frame_id" value="$(arg frame_id)"/>
    <arg name="manager" value="$(arg manager)" />
    <arg name="model" value="VLP16"/>
    <arg name="pcap" value="$(arg pcap)"/>
    <arg name="port" value="$(arg port)"/>
    <arg name="read_fast" value="$(arg read_fast)"/>
    <arg name="read_once" value="$(arg read_once)"/>
    <arg name="repeat_delay" value="$(arg repeat_delay)"/>
    <arg name="rpm" value="$(arg rpm)"/>
    <arg name="gps_time" value="$(arg gps_time)"/>
    <arg name="cut_angle" value="$(arg cut_angle)"/>
    <arg name="timestamp_first_packet" value="$(arg timestamp_first_packet)"/>
  </include>

  <!-- start cloud nodelet -->
  <include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
    <arg name="model" value="VLP16"/>
    <arg name="calibration" value="$(arg calibration)"/>
    <arg name="manager" value="$(arg manager)" />
    <arg name="fixed_frame" value="$(arg frame_id)" />
    <arg name="target_frame" value="$(arg frame_id)" />
    <arg name="max_range" value="$(arg max_range)"/>
    <arg name="min_range" value="$(arg min_range)"/>
    <arg name="organize_cloud" value="$(arg organize_cloud)"/>
  </include>

  <!-- start PointCloud Fast Filter -->
  <node name="velodyne_filter" pkg="traversable_mapping" type="velodyne_filter">
    <param name="topicSubscriber" value="/velodyne_points"/> 
    <param name="topicPublisher" value="/scan"/> 
    <param name="frameID" value="base_link"/> 
    <param name="robotHeight" value="0.85"/> 
    <param name="sensorHeight" value="0.74"/> 
    <param name="resolution" value="0.2"/> 
    <param name="visionAngle" value="360"/> 
  </node> 

  <!-- start Turtlebot -->
  <include file="$(find turtlebot_bringup)/launch/minimal.launch"/>
  <arg name="3d_sensor" default="$(env TURTLEBOT_3D_SENSOR)"/>  

  <!-- Map server -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(find path_predictor)/maps/corridor.yaml" />

  <!-- AMCL -->
  <arg name="custom_amcl_launch_file" default="$(find turtlebot_navigation)/launch/includes/amcl/amcl.launch.xml"/>
  <arg name="initial_pose_x" default="21.8550338745"/>
  <arg name="initial_pose_y" default="5.54578638077"/>
  <arg name="initial_pose_a" default="1.5844873"/>
  <include file="$(arg custom_amcl_launch_file)">
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
  </include>

  <!-- Move base -->
  <arg name="custom_param_file" default="$(find turtlebot_navigation)/param/$(arg 3d_sensor)_costmap_params.yaml"/>
  <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml">
    <arg name="custom_param_file" value="$(arg custom_param_file)"/>
  </include>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find semantic_mapping)/rviz_cfg/semantic.rviz"/>

  <!-- start PointCloud people detection -->
  <arg name="node_start_delay" default="10.0" />  
  <node name="semantic_people_lidar" pkg="semantic_mapping" type="semantic_people_lidar" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' ">
    <param name="robot_height" value="0.85"/> 
    <param name="sensor_height" value="0.74"/> 
    <param name="horizontal_fov" value="360"/> 
    <param name="resolution" value="0.2"/> 
    <param name="legs_begin" value="0.25"/> 
    <param name="legs_end" value="0.65"/> 
    <param name="trunk_begin" value="0.8"/> 
    <param name="trunk_end" value="1.6"/> 
    <param name="initial_robotpose_x" value="21.85"/> 
    <param name="initial_robotpose_y" value="5.54"/> 
    <param name="initial_robotpose_a" value="1.58"/> 
    <param name="topic_pub_people" value="/People_PC"/> 
    <param name="sensor_topic_sub" value="/velodyne_points"/> 
    <param name="pose_topic_sub" value="/odom"/> 
    <param name="map_topic_sub" value="/map"/> 
    <param name="frame_id" value="map"/> 
  </node> 

  <!-- Start rosbag record -->
  <arg name="rosbag_start_delay" default="20.0" /> 
  <node pkg="rosbag" type="record" name="record_all" args="record -O people_data  /map /velodyne_points /odom" launch-prefix="bash -c 'sleep $(arg rosbag_start_delay); $0 $@' "/>

 



</launch>
