<launch>

    <!-- Launch Turtlebot Simulator -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="use_sim_time" value="true"/>
        <arg name="debug" value="false"/>
        <arg name="gui" value="false" />
        <arg name="world_name" value="$(find social_navigation)/worlds/office_two_person_opt2.world"/>
    </include>
    
    <arg name="urdf_file" default="$(find xacro)/xacro '$(find project_2021)/launch/Turlebot_Velodyne_Model/kobuki.urdf.xacro'"/>
    <param name="robot_description" command="$(arg urdf_file)"/>

    <!-- Gazebo model spawner -->
    <node name="spawn_turtlebot_model" pkg="gazebo_ros" type="spawn_model" args="$(optenv ROBOT_INITIAL_POSE) -unpause -urdf -param robot_description -model mobile_base"/>

    <!-- Velocity muxer -->
    <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="cmd_vel_mux" args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
        <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml"/>
        <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
    </node>

    <!-- Bumper/cliff to pointcloud (not working, as it needs sensors/core messages) -->
    <include file="$(find turtlebot_bringup)/launch/includes/kobuki/bumper2pc.launch.xml"/>

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="30.0" />
    </node>

    <!-- Start filter -->
    <node name="velodyne_filter" pkg="traversable_mapping" type="velodyne_filter">
        <param name="topicSubscriber" value="/velodyne_points"/> 
        <param name="topicPublisher" value="/scan_traversable"/> 
        <param name="frameID" value="base_link"/> 
        <param name="robotHeight" value="0.80"/> 
        <param name="sensorHeight" value="0.78"/> 
        <param name="resolution" value="0.1"/> 
        <param name="visionAngle" value="360"/> 
    </node>

    <!-- Map server -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(find social_navigation)/maps/office_sim.yaml" />

    <!-- Localization -->

    <arg name="initial_pose_x" default="22.33403968811035" doc="Used in Navigation"/> 
    <arg name="initial_pose_y" default="14.582218170166016" doc="Used in Navigation"/> 
    <arg name="initial_pose_a" default="0.0" doc="Used in Navigation"/>
    <include file="$(find turtlebot_navigation)/launch/includes/amcl/kinect_amcl.launch.xml" >
        <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
        <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
        <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
        <arg name="scan_topic"      default="scan_traversable"/> 
    </include>

    <!-- Move base -->
    <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml">
        <arg name="laser_topic" default="scan_traversable" />
    </include>

    <!-- Open RViz -->
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find social_navigation)/rviz_cfg/social_navigation.rviz" />

    <!-- LiDAR PEOPLE DETECTION --> 
    <node name="semantic_people_lidar" pkg="semantic_mapping" type="semantic_people_lidar">
        <param name="robot_height" value="0.80"/> 
        <param name="sensor_height" value="0.78"/> 
        <param name="horizontal_fov" value="360"/> 
        <param name="resolution" value="0.1"/> 
        <param name="legs_begin" value="0.3"/> 
        <param name="legs_end" value="0.6"/> 
        <param name="trunk_begin" value="0.8"/> 
        <param name="trunk_end" value="1.3"/> 
        <param name="initial_robotpose_x" value="$(arg initial_pose_x)"/> 
        <param name="initial_robotpose_y" value="$(arg initial_pose_y)"/> 
        <param name="initial_robotpose_a" value="$(arg initial_pose_a)"/>
        <param name="maptolerance" value="1"/> 
        <param name="topic_pub_people" value="/People_PC"/> 
        <param name="sensor_topic_sub" value="/velodyne_points"/> 
        <param name="pose_topic_sub" value="/odom"/> 
        <param name="map_topic_sub" value="/map"/> 
        <param name="frame_id" value="map"/> 
    </node>

</launch>
